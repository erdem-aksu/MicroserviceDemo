// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using System;
using System.Threading.Tasks;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Modeling;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client.ClientProxying;
using MicroserviceDemo.ReportService.Reports;

// ReSharper disable once CheckNamespace
namespace MicroserviceDemo.ReportService.ClientProxies;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IReportAppService), typeof(ReportClientProxy))]
public partial class ReportClientProxy : ClientProxyBase<IReportAppService>, IReportAppService
{
    public virtual async Task<ReportDto> GetAsync(Guid id)
    {
        return await RequestAsync<ReportDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<ReportListDto>> GetListAsync(GetReportsInput input)
    {
        return await RequestAsync<PagedResultDto<ReportListDto>>(nameof(GetListAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetReportsInput), input }
        });
    }

    public virtual async Task<ReportDto> CreateAsync(ReportCreateDto input)
    {
        return await RequestAsync<ReportDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(ReportCreateDto), input }
        });
    }

    public virtual async Task DeleteAsync(Guid id)
    {
        await RequestAsync(nameof(DeleteAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }
}
